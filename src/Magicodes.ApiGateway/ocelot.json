{
  "GlobalConfiguration": {
    //服务发现提供程序
    "ServiceDiscoveryProvider": {
      "Host": "111.230.118.59",
      "Port": 80,
      "Type": "PollConsul",
      "PollingInterval": 1000
    },
    //外部访问路径
    "BaseUrl": "http://apigateway.xin-lai.com",
    //限速配置
    "RateLimitOptions": {
      //白名单
      "ClientWhitelist": [],
      "EnableRateLimiting": true,
      //限制时间段，例如1s，5m，1h，1d
      "Period": "1s",
      //重试等待的时间间隔（秒）
      "PeriodTimespan": 1,
      //限制
      "Limit": 1,
      //自定义消息
      "QuotaExceededMessage": "单位时间内请求次数超过限制！",
      "HttpStatusCode": 999
    },
    //熔断配置
    "QoSOptions": {
      "ExceptionsAllowedBeforeBreaking": 3,
      "DurationOfBreak": 5,
      //超时值(毫秒)
      "TimeoutValue": 5000
    }
  },
  "ReRoutes": [
    {
      "UpstreamPathTemplate": "/api/cloud/app/{url}",
      "UpstreamHttpMethod": [ "Post", "Get" ],
      "DownstreamPathTemplate": "/api/{url}",
      "DownstreamScheme": "http",
      //"AuthenticationOptions": {
      //  "AuthenticationProviderKey": "IdentityBearer",
      //  "AllowedScopes": []
      //},
      "DownstreamHostAndPorts": [
        {
          "Host": "172.16.31.58",
          "Port": 80
        }
      ],
      //缓存配置
      "FileCacheOptions": {
        "TtlSeconds": 15,
        "Region": "test"
      },
      //负载均衡
      "LoadBalancerOptions": {
        "Type": "LeastConnection"
      }
    },
    {
      "UpstreamPathTemplate": "/api/cloud/logs/{url}",
      "UpstreamHttpMethod": [ "Post" ],
      "DownstreamPathTemplate": "/app/{url}",
      "DownstreamScheme": "https",
      //"AuthenticationOptions": {
      //  "AuthenticationProviderKey": "IdentityBearer",
      //  "AllowedScopes": []
      //},
      "DownstreamHostAndPorts": [
        {
          "Host": "monitor.xin-lai.com",
          "Port": 443
        }
      ],
      ////缓存配置
      //"FileCacheOptions": {
      //  "TtlSeconds": 15,
      //  "Region": "test"
      //},
      //负载均衡
      "LoadBalancerOptions": {
        "Type": "LeastConnection"
      }
    },
    //swagger API1配置
    {
      "DownstreamPathTemplate": "/SwaggerAPI1/swagger.json",
      "DownstreamScheme": "https",
      "UpstreamPathTemplate": "/SwaggerAPI1/swagger.json",
      "UpstreamHttpMethod": [ "GET", "POST", "DELETE", "PUT" ],
      "DownstreamHostAndPorts": [
        {
          "Host": "119.29.50.115",
          "Port": 80
        }
      ]
    },
    //swagger API2配置
    {
      "DownstreamPathTemplate": "/SwaggerAPI2/swagger.json",
      "DownstreamScheme": "https",
      "UpstreamPathTemplate": "/SwaggerAPI2/swagger.json",
      "UpstreamHttpMethod": [ "GET", "POST", "DELETE", "PUT" ],
      "DownstreamHostAndPorts": [
        {
          "Host": "111.230.160.62",
          "Port": 80
        }
      ]
    },
    //API1项目配置
    {
      "DownstreamPathTemplate": "/api1/{url}",
      "DownstreamScheme": "https",
      "UpstreamPathTemplate": "/api/{url}",
      "UpstreamHttpMethod": [ "Get", "Post", "Delete", "Put" ],
      "ServiceName": "API1",
      "UseServiceDiscovery": true,
      "LoadBalancerOptions": {
        "Type": "LeastConnection"
      },
      "DownstreamHostAndPorts": [
        {
          "Host": "119.29.50.115",
          "Port": 80
        }
      ],

      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 10,
        "TimeoutValue": 5000
      },
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": [
        ]
      }
    },
    //API2项目配置
    {
      "DownstreamPathTemplate": "/api2/{url}",
      "DownstreamScheme": "https",
      "UpstreamPathTemplate": "/api/{url}",
      "UpstreamHttpMethod": [ "Get", "Post", "Delete", "Put" ],
      "ServiceName": "API2",
      "UseServiceDiscovery": true,
      "LoadBalancerOptions": {
        "Type": "LeastConnection"
      },
      "DownstreamHostAndPorts": [
        {
          "Host": "111.230.160.62",
          "Port": 80
        }
      ],
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 10,
        "TimeoutValue": 5000
      },
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": [
        ]
      }
    }
  ]
}